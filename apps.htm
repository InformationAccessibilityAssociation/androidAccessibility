<!DOCTYPE html PUBLIC "" "">
<HTML lang="zh-CN">
<HEAD>
<META content="IE=11.0000" http-equiv="X-UA-Compatible">
 
<META http-equiv="Content-Type" content="text/html; charset=utf-8"> 
<META name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"> 
<META http-equiv="X-UA-Compatible" content="IE=edge"> 
<META name="Description" content="Applications built for Android are more accessible to users with visual, physical or age-related limitations when those users activate accessibility services and features on a device. These services make your application more accessible even if you do…"> 
<LINK href="/favicon.ico" rel="shortcut icon" type="image/x-icon"> <LINK href="apps.htm" 
rel="alternate" hreflang="en"> <LINK href="http://developer.android.com/intl/es/guide/topics/ui/accessibility/apps.html" 
rel="alternate" hreflang="es"> <LINK href="http://developer.android.com/intl/id/guide/topics/ui/accessibility/apps.html" 
rel="alternate" hreflang="id"> <LINK href="http://developer.android.com/intl/ja/guide/topics/ui/accessibility/apps.html" 
rel="alternate" hreflang="ja"> <LINK href="http://developer.android.com/intl/ko/guide/topics/ui/accessibility/apps.html" 
rel="alternate" hreflang="ko"> <LINK href="http://developer.android.com/intl/pt-br/guide/topics/ui/accessibility/apps.html" 
rel="alternate" hreflang="pt-br"> <LINK href="http://developer.android.com/intl/ru/guide/topics/ui/accessibility/apps.html" 
rel="alternate" hreflang="ru"> <LINK href="http://developer.android.com/intl/vi/guide/topics/ui/accessibility/apps.html" 
rel="alternate" hreflang="vi"> <LINK href="http://developer.android.com/intl/zh-cn/guide/topics/ui/accessibility/apps.html" 
rel="alternate" hreflang="zh-cn"> <LINK href="http://developer.android.com/intl/zh-tw/guide/topics/ui/accessibility/apps.html" 
rel="alternate" hreflang="zh-tw"> <TITLE>让应用无障碍|Android开发</TITLE> <!-- STYLESHEETS --> <LINK href="style/css" 
rel="stylesheet"> <LINK title="roboto" href="style/css.css" 
rel="stylesheet"> <LINK href="style/default.css" 
rel="stylesheet" type="text/css"> <!-- JAVASCRIPT --> 
<SCRIPT src="style/jsapi.js" type="text/javascript"></SCRIPT>
 
<SCRIPT src="style/android_3p-bundle.js" type="text/javascript"></SCRIPT>
 
<SCRIPT type="text/javascript">
  var toRoot = "/";
  var metaTags = [];
  var devsite = false;
  var useUpdatedTemplates = false;
</SCRIPT>
 
<SCRIPT src="style/docs.js" type="text/javascript"></SCRIPT>
 
<SCRIPT>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-5831155-1', 'android.com');
  ga('create', 'UA-49880327-2', 'android.com', {'name': 'universal'});  // New tracker);
  ga('send', 'pageview');
  ga('universal.send', 'pageview'); // Send page view for new tracker.
</SCRIPT>
 
<META name="GENERATOR" content="MSHTML 11.00.9600.18057"></HEAD> 
<BODY class="gc-documentation&#10;&#10;&#10;develop guide" itemtype="http://schema.org/Article" 
itemscope=""><A name="top"></A> 
<SCRIPT type="text/javascript">
<!--
    buildToggleLists();
    changeNavLang(getLangPref());
//-->
</SCRIPT>
         </DIV></DIV></DIV><!-- end side-nav -->     
<SCRIPT>
      $(document).ready(function() {
        scrollIntoView("devdoc-nav");
        });
    </SCRIPT>
 
 
<!--正文-->
<DIV class="col-12" id="doc-col">
<br/>
<div class="nav">
<div>
<ul class="nav1">
<li><a href="declaration.htm">翻译声明</a></li>
<li><a href="https://developer.android.com/guide/topics/ui/accessibility/index.html">英文原文</a></li>
<li><a href="http://informationaccessibilityassociation.github.io/androidAccessibility_ENandCH /declaration.htm">中英文对照</a></li>
</ul>
</div>
<div align="right">
<a href="http://www.siaa.org.cn/"><img src="logo.png" alt="信息无障碍研究会logo" class="yanjiuhuilogo"></img></a>
</div>
</div>
<br/>
<hr class="fengexian"/>
<H1 itemprop="name">让应用无障碍</H1>

<DIV id="jd-content">
<DIV class="jd-descr" itemprop="articleBody">
<DIV id="qv-wrapper">

<DIV id="qv">
<H2>主题</H2>

<OL>
<LI><A href="index.htm"> 
     无障碍</A></LI>
  <LI><A href="apps.htm"> 
     让应用无障碍</A></LI>
  <LI><A href="checklist.htm"> 
     无障碍开发清单</A></LI>
  <LI><A href="services.htm"> 
     构建无障碍服务</A></LI></OL>
<H2>本章目录</H2>
  
  <OL>
  <LI><A href="apps.htm#label-ui">标记用户界面元素</A></LI>
  <LI><A href="apps.htm#focus-nav">启用焦点导航</A>       
  <OL>
    <LI><A href="apps.htm#focus-enable">启用视图焦点</A></LI>
    <LI><A href="apps.htm#focus-order">控制焦点顺序</A></LI></OL></LI>
  <LI><A href="apps.htm#custom-views">创建可访问自定义视图</A>       
  <OL>
    <LI><A href="apps.htm#directional-control">处理定向控制器的点击</A></LI>
    <LI><A href="apps.htm#accessibility-methods">实现无障碍API方法</A></LI>
    <LI><A href="apps.htm#send-events">发送无障碍事件</A></LI>
    <LI><A href="apps.htm#populate-events">填充无障碍事件</A></LI>
    <LI><A href="apps.htm#virtual-hierarchy">提供自定义无障碍内容</A></LI>
    <LI><A href="apps.htm#custom-touch-events">处理自定义触摸事件</A></LI></OL></LI>
  <LI><A href="apps.htm#test">测试无障碍</A></LI></OL>
 

<H2>关键类</H2>
<OL>
  <LI><CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE></LI>
  <LI><CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.html">AccessibilityNodeInfo</A></CODE></LI>
  <LI><CODE><A href="http://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeInfoCompat.html">AccessibilityNodeInfoCompat</A></CODE></LI>
  <LI><CODE><A href="http://developer.android.com/reference/android/view/View.AccessibilityDelegate.html">View.AccessibilityDelegate</A></CODE></LI>
  <LI><CODE><A href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html">AccessibilityDelegateCompat</A></CODE></LI></OL>
  
  
  <H2>更多内容</H2>

<OL>
  <LI><A href="checklist.htm">无障碍开发者清单</A>
  <LI>
  <LI><A href="http://developer.android.com/tools/testing/testing_accessibility.html">无障碍测试清单</A>
  <LI>
  <LI><A 
  href="http://developer.android.com/design/patterns/accessibility.html">Android设计：无障碍</A></LI>
  <LI><A href="http://developer.android.com/training/design-navigation/index.html">设计有效导航</A></LI>
  <LI><A 
  href="http://developer.android.com/training/accessibility/index.html">培训：实现无障碍</A></LI></OL></DIV></DIV>
  
   
<P class="zhongwen">当视觉、肢残和老龄化用户激活设备中的无障碍服务和特性时，Android应用将会更加无障碍。无障碍服务让应用更加无障碍，即使在代码中不做任何的无障碍修改。但是，需要采取以下步骤来评估应用的无障碍性能，确保所有用户都有愉快的使用体验。</P>
 

<P class="zhongwen">保证所有用户的无障碍体验需要做到以下几步，特别是使用Android框架提供的组件创建用户界面时。如果应用只使用标准组件，步骤如下：</P>


	
<OL>
  <LI><div class="zhongwen">使用<A href="http://developer.android.com/reference/android/view/View.html#attr_android:contentDescription"><CODE>android:contentDescription</CODE></A>属性为应用中的交互控件添加描述性文本，特别是<CODE><A href="http://developer.android.com/reference/android/widget/ImageButton.html">ImageButton</A></CODE>、
  <CODE><A href="http://developer.android.com/reference/android/widget/ImageView.html">ImageView</A></CODE>和<CODE><A href="http://developer.android.com/reference/android/widget/CheckBox.html">CheckBox</A></CODE>。</div></LI>
  
  
  <LI><div class="zhongwen">保证所有可以接收输入（触摸和输入）的用户界面元素都可以使用定向控制到达，例如：轨迹球、D-pad（物理或虚拟）、导航<A href="http://support.google.com/android/bin/topic.py?hl=en&amp;topic=2492346">手势</A>。</div></LI>
  
  <LI class="zhongwen">保证在音频反馈的同时伴有视觉反馈或通知，帮助听障用户使用应用。</LI>
  
  <LI> <div class="zhongwen">使用无障碍导航服务和特性测试应用。打开<A href="http://developer.android.com/tools/testing/testing_accessibility.html#testing-talkback">TalkBack</A>和<A href="http://developer.android.com/tools/testing/testing_accessibility.html#testing-ebt">触摸浏览（Explore by Touch）</A>，然后尝试使用定向控制操作应用。更多无障碍测试信息，详见无障碍测试清单（<A 
  href="http://developer.android.com/tools/testing/testing_accessibility.html">  
    Accessibility Testing Checklist</A>）。</div></LI>
	
</OL>
	



<P class="zhongwen">如果自定义控件继承了<CODE><A href="http://developer.android.com/reference/android/view/View.html">View</A></CODE>类，需要另外的工作来保证组件无障碍。该章节讨论的是怎样让自定义控件拥有无障碍特性。</P>



<P class="note zhongwen"><STRONG>注意：</STRONG>该章节的实现步骤描述了为视障用户对应用进行无障碍改造的需求。在<A href="checklist.htm">无障碍开发清单（Accessibility Developer Checklist）</A>中需要复查视障用户的无障碍需求。</P>

<H2 id="label-ui">标记用户界面元素</H2>


<P class="zhongwen">很多用户界面控件依靠视觉提示告知用户含义和作用。例如：一个记事本程序可能会使用一个带有加号图片的<CODE><A href="http://developer.android.com/reference/android/widget/ImageButton.html">ImageButton</A></CODE>来提示用户可以通过它添加一个新的记录。或者，一个<CODE><A href="http://developer.android.com/reference/android/widget/EditText.html">EditText</A></CODE>元素的附近可能会有一个标签来提示目的。视障用户不能清晰看到这些提示并遵循它们，导致这些提示无效。</P>
 
 
 <P class="zhongwen">可以使用<A href="http://developer.android.com/reference/android/view/View.html#attr_android:contentDescription"><CODE>android:contentDescription</CODE></A> XML布局属性来让这些控件更加无障碍。该属性中的文本不会出现在屏幕上，但如果用户启用了可以提供音频反馈的无障碍服务，当用户导航到这些控件的时候，描述文本将会被读出。</P>
 

<P class="zhongwen">因此，在应用的用户界面中需要为每个<CODE><A href="http://developer.android.com/reference/android/widget/ImageButton.html">ImageButton</A></CODE>、
<CODE><A href="http://developer.android.com/reference/android/widget/ImageView.html">ImageView</A></CODE>、
<CODE><A href="http://developer.android.com/reference/android/widget/CheckBox.html">CheckBox</A></CODE>控件设置<A href="http://developer.android.com/reference/android/view/View.html#attr_android:contentDescription"><CODE>android:contentDescription</CODE></A>属性，同时也需要为视障用户在那些可能需要额外信息的输入控件中添加描述文本。</P>


<P class="zhongwen">例如，下面的<CODE><A href="http://developer.android.com/reference/android/widget/ImageButton.html">ImageButton</A></CODE>使用<CODE>add_note</CODE>字符串资源为加号按钮设置内容描述，该资源在英文界面可能被定义为“Add note”：</P>

<PRE>&lt;ImageButton
    android:id=”@+id/add_note_button”
    android:src=”@drawable/add_note”
    android:contentDescription=”@string/add_note”/&gt;
</PRE>


<P class="zhongwen">通过给图像按钮添加描述文本，当用户将焦点移到该按钮，或者鼠标悬停时，提供语音反馈的无障碍服务可以读出“Add note”。</P>


<P class="note zhongwen"><STRONG>注意:</STRONG>对于<CODE><A href="http://developer.android.com/reference/android/widget/EditText.html">EditText</A></CODE>区域，提供<A href="http://developer.android.com/reference/android/widget/TextView.html#attr_android:hint">android:hint</A>属性<EM>代替</EM>内容描述，文本区域为空的时候此属性帮助用户理解应该输入什么样的内容。当文本区域填充上内容，TalkBack将会读出输入的文本，而不会读出提示文本。</P>

<H2 id="focus-nav">启用焦点导航</H2>


<P class="zhongwen">焦点导航允许残障用户使用定向控制器一步步的浏览用户界面控件。定向控制器可以是物理的，如轨迹球、定向垫（D-pad）、方向键，或虚拟的，如非视觉键盘（<A href="https://play.google.com/store/apps/details?id=com.googlecode.eyesfree.inputmethod.latin">
Eyes-Free Keyboard</A>）、和Android4.1以及以上可用的手势导航。定向控制器是很多Android用户导航的首选方式。</P>

 
 <P class="zhongwen">为了保证用户可以使用定向控制器导航应用，需要验证应用中所有用户界面输入控件，在不使用触屏的情况下可以到达和激活。应该验证点击定向控制器的中心按钮（或OK按钮）和触屏的触摸操作有同样的效果。更多关于测试定向控制的信息，详见<A href="http://developer.android.com/tools/testing/testing_accessibility.html#test-navigation">测试焦点导航</A>。</P>

<H3 id="focus-enable">启用视图焦点</H3>


<P class="zhongwen">当用户界面元素的<A 
href="http://developer.android.com/reference/android/view/View.html#attr_android:focusable"><CODE>android:focusable</CODE></A>属性设置为<CODE>true</CODE>时，可以使用定向控制到达该元素。该设置允许用户使用定向控制聚焦元素并与之交互。 Android框架提供的用户界面控件默认可聚焦，并通过改变控件的外观可直观表明其聚焦。</P>


<P class="zhongwen">Android提供了几个API让开发者决定用户界面控件是否可聚焦，甚至请求给控件赋予焦点：</P>

<UL>
  <LI><CODE><A href="http://developer.android.com/reference/android/view/View.html#setFocusable(boolean)">setFocusable()</A></CODE></LI>
  <LI><CODE><A href="http://developer.android.com/reference/android/view/View.html#isFocusable()">isFocusable()</A></CODE></LI>
  <LI><CODE><A href="http://developer.android.com/reference/android/view/View.html#requestFocus()">requestFocus()</A></CODE></LI></UL>
 

<P class="zhongwen">如果视图不是默认聚焦，可以在布局文件中设置<A href="http://developer.android.com/reference/android/view/View.html#attr_android:focusable"><CODE>android:focusable</CODE></A>属性为<CODE>true</CODE>，或者调用<CODE><A href="http://developer.android.com/reference/android/view/View.html#setFocusable(boolean)">setFocusable()</A></CODE>方法让视图可聚焦。</P>

<H3 id="focus-order">控制焦点顺序</H3>


<P class="zhongwen">当用户在任何方向使用定向控制器导航时，焦点从一个用户界面元素（视图）传递到另一个由焦点顺序指定的用户界面元素（视图）。焦点顺序是以一种在某一特定方向上寻找相邻元素的算法为基础的。在极少数情况下，默认的算法可能不匹配开发者定义的顺序，或可能对于用户不符合逻辑。在这些情况下，可以在布局文件中使用下列的xml属性明确地覆盖焦点顺序：</P>
  
<DL>
  <DT><A href="http://developer.android.com/reference/android/view/View.html#attr_android:nextFocusDown"><CODE>android:nextFocusDown</CODE></A></DT>
  <DD>当用户向下导航时，定义下一个接收焦点的视图；</DD>
  <DT><A href="http://developer.android.com/reference/android/view/View.html#attr_android:nextFocusLeft"><CODE>android:nextFocusLeft</CODE></A></DT>
  <DD>当用户向左导航时，定义下一个接收焦点的视图；</DD>
  <DT><A href="http://developer.android.com/reference/android/view/View.html#attr_android:nextFocusRight"><CODE>android:nextFocusRight</CODE></A></DT>
  <DD>当用户向右导航时，定义下一个接收焦点的视图；</DD>
  <DT><A href="http://developer.android.com/reference/android/view/View.html#attr_android:nextFocusUp"><CODE>android:nextFocusUp</CODE></A></DT>
  <DD>当用户向上导航时，定义下一个接收焦点的视图。</DD></DL>
  


<P class="zhongwen">下面的XML布局示例中展示了两个可聚焦的用户界面元素，这两个元素的<A href="http://developer.android.com/reference/android/view/View.html#attr_android:nextFocusDown"><CODE>android:nextFocusDown</CODE></A>和<A href="http://developer.android.com/reference/android/view/View.html#attr_android:nextFocusUp"><CODE>android:nextFocusUp</CODE></A>属性被明确地设置。<CODE><A href="http://developer.android.com/reference/android/widget/TextView.html">TextView</A></CODE>位于<CODE><A href="http://developer.android.com/reference/android/widget/EditText.html">EditText</A></CODE>的右边。但是，因为设置了这些属性，当<CODE><A href="http://developer.android.com/reference/android/widget/EditText.html">EditText</A></CODE>聚焦时，按下下光标可以将焦点移到<CODE><A href="http://developer.android.com/reference/android/widget/TextView.html">TextView</A></CODE>元素上。</P>


<PRE>&lt;LinearLayout android:orientation="horizontal"
        ... &gt;
    &lt;EditText android:id="@+id/edit"
        android:nextFocusDown=”@+id/text”
        ... /&gt;
    &lt;TextView android:id="@+id/text"
        android:focusable=”true”
        android:text="Hello, I am a focusable TextView"
        android:nextFocusUp=”@id/edit”
        ... /&gt;
&lt;/LinearLayout&gt;
</PRE>


<P class="zhongwen">当修改焦点顺序时，确保每一个用户界面控件的所有方向的导航能按照预期工作，尤其是反向导航的时候（从来的路径返回）。</P>

 <P class="note zhongwen"><STRONG>注意:</STRONG>开发者可以使用诸如<CODE><A href="http://developer.android.com/reference/android/view/View.html#setNextFocusDownId(int)">setNextFocusDownId()</A></CODE>和<CODE><A href="http://developer.android.com/reference/android/view/View.html#setNextFocusRightId(int)">setNextFocusRightId()</A></CODE>的方法，在程序运行的时候修改用户界面组件的聚焦顺序。</P>
 
<H2 id="custom-views">创建可访问自定义视图</H2>

<P class="zhongwen">如果应用需要一个<A href="http://developer.android.com/guide/topics/ui/custom-components.html">自定义视图组件</A>，开发者必须做一些额外的工作来确保自定义视图是可访问的。这些都是确保视图可访问性的主要任务：</P>

  <UL>
  <LI>处理定向控制器的点击；</LI>
  <LI>实现无障碍API方法；</LI>
  <LI>发送特定的<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE>对象到自定义视图；</LI>
  <LI>为视图填充<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE>和<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.html">AccessibilityNodeInfo</A></CODE>；</LI></UL>

<H3 id="directional-control">处理定向控制器的点击</H3>


<P class="zhongwen">在大多数的Android设备上，使用定向控制器单击视图会发送一个带有<CODE><A href="http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_CENTER">KEYCODE_DPAD_CENTER</A></CODE>的<CODE><A href="http://developer.android.com/reference/android/view/KeyEvent.html">KeyEvent</A></CODE>事件到当前的焦点视图。所有的标准Android视图已经适当地处理<CODE><A href="http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_CENTER">KEYCODE_DPAD_CENTER</A></CODE>。当构建一个自定义<CODE><A href="http://developer.android.com/reference/android/view/View.html">View</A></CODE>控件，确保这个事件的效果跟在触摸屏上触摸视图的效果一样。</P>
 

<P class="zhongwen">自定义控件也应该将<CODE><A href="http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_ENTER">KEYCODE_ENTER</A></CODE>事件作为<CODE><A href="http://developer.android.com/reference/android/view/KeyEvent.html#KEYCODE_DPAD_CENTER">KEYCODE_DPAD_CENTER</A></CODE>事件处理，这种方法使全键盘用户的交互更加容易。</P>

<H3 id="accessibility-methods">实现无障碍API方法</H3>

<P class="zhongwen">无障碍事件是用户在应用中与视觉界面元素的交互消息。这些消息是由无障碍服务（<A href="services.htm">Accessibility 
Services</A>）处理的，这些服务使用这些事件中的信息去产生补充反馈和提示。在Android4.0（API级别14）和更高的系统中，生成无障碍事件的方法被扩展到比Android1.6（API级别4）的<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEventSource.html">AccessibilityEventSource</A></CODE>提供更多的详细信息。扩展无障碍方法是<CODE><A href="http://developer.android.com/reference/android/view/View.html">View</A></CODE>类和<CODE><A href="http://developer.android.com/reference/android/view/View.AccessibilityDelegate.html">View.AccessibilityDelegate</A></CODE>类的一部分。这些方法如下：</P>

<DL>
  <DT><CODE><A href="http://developer.android.com/reference/android/view/View.html#sendAccessibilityEvent(int)">sendAccessibilityEvent()</A></CODE></DT>
  
  <DD class="zhongwen">(API级别4)当用户操作视图时，这个方法被调用。该事件使用用户操作类型进行分类，例如<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_CLICKED">TYPE_VIEW_CLICKED</A></CODE>。开发者一般不需要实现这个方法，除非创建了自定义视图。</DD>
  
  <DT><CODE><A href="http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)">sendAccessibilityEventUnchecked()</A></CODE></DT>
  
  
  <DD class="zhongwen">(API级别4)当调用的代码需要直接检查设备是否激活无障碍特性(<CODE><A 
  href="http://developer.android.com/reference/android/view/accessibility/AccessibilityManager.html#isEnabled()">AccessibilityManager.isEnabled()</A></CODE>)的时候，调用该方法。如果实现该方法，必须执行无障碍激活的检查，而不管系统真正的设置。一般的，不需要为自定义视图实现该方法。</DD>
  
  <DT><CODE><A href="http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">dispatchPopulateAccessibilityEvent()</A></CODE></DT>
  
    <DD class="zhongwen">(API级别4)当自定义视图产生无障碍事件时，系统调用这个方法。在API级别14中，该方法的默认实现是为视图调用<CODE><A href="http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">onPopulateAccessibilityEvent()</A></CODE>，然后为该视图的子元素调用 <CODE><A href="http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">dispatchPopulateAccessibilityEvent()</A></CODE>。为了支持Android4.0（API级别14）<EM>之前</EM>的版本，开发者<EM>必须</EM>重写该方法，使用自定义视图的描述性文本填充<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityRecord.html#getText()">getText()</A></CODE>，描述性文本将会被无障碍服务读出，例如TalkBack。</DD>
  
  <DT><CODE><A href="http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">onPopulateAccessibilityEvent()</A></CODE></DT>
  
  <DD class="zhongwen">(API级别14)该方法为视图的<CODE><A 
  href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE>设置朗读文本提示。如果视图是另一个生成无障碍事件视图的子视图，调用该方法。
  <P class="note"><STRONG>注意：</STRONG> 通过该方法修改文本以外的属性可能会被其他方法重写。虽然在该方法中开发者可以修改无障碍事件的属性，但是应该做到这些改变仅限于文本内容，并使用<CODE><A 
  href="http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">onInitializeAccessibilityEvent()</A></CODE>方法修改事件的其他属性。</P>
  <P class="note"><STRONG>注意：</STRONG> 如果该事件的实现完全重写了输出文本，而不允许布局的其他部分修改这个内容，不要在代码中调用该方法的父类实现。</P></DD>
  
  
  <DT><CODE><A href="http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">onInitializeAccessibilityEvent()</A></CODE></DT>
 
  
  <DD class="zhongwen">(API级别14)系统调用此方法来获取超出文本内容的视图状态的附加信息。如果自定义视图提供简单<CODE><A href="http://developer.android.com/reference/android/widget/TextView.html">TextView</A></CODE>或<CODE><A href="http://developer.android.com/reference/android/widget/Button.html">Button</A></CODE>以外的交互控制,开发者应该重写该方法，并且使用该方法设置该视图的额外信息到事件中,如密码区域类型,复选框类型或提供用户交互或反馈的状态。如果重写这个方法,开发者必须调用它父类的实现方法，然后只修改那些父类中尚未设置的属性。</DD>
  
  <DT><CODE><A href="http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)">onInitializeAccessibilityNodeInfo()</A></CODE></DT>
 
  
  <DD class="zhongwen">(API级别14)该方法为无障碍服务提供视图的状态信息。默认<CODE><A href="http://developer.android.com/reference/android/view/View.html">View</A></CODE>的实现包含一组标准的视图属性，但是如果自定义视图提供了超出<CODE><A href="http://developer.android.com/reference/android/widget/TextView.html">TextView</A></CODE>或<CODE><A href="http://developer.android.com/reference/android/widget/Button.html">Button</A></CODE>的交互，开发者应该重写该方法，并在<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.html">AccessibilityNodeInfo</A></CODE>对象中设置视图的额外信息，该对象被该方法处理。</DD>
  
  <DT><CODE><A href="http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)">onRequestSendAccessibilityEvent()</A></CODE></DT>
  
    <DD class="zhongwen">(API级别14)当视图中的一个子视图生成<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE>时，系统调用这个方法。该步骤允许父视图使用额外信息修复无障碍事件。当自定义视图有子视图，且其父视图可以为无障碍事件提供对无障碍服务有用的上下文信息的时候，此时开发者应该实现这个方法。</DD>
  
  </DL>


<P class="zhongwen">为了在自定义视图中支持这些无障碍方法，应该采取下列方法中的一种：</P>

  
  <UL>
  <LI><div class="zhongwen">如果应用程序目标版本是Android4.0(API级别14)或更高，就直接在自定义视图类中重写并实现上面列出的无障碍方法。</div></LI>
  <LI><div class="zhongwen">如果自定义视图的目的是要兼容Android1.6(API级别4)及以上，在项目中添加版本5或更高的<A href="http://developer.android.com/tools/support-library/index.html">支持库</A>。然后，在自定义视图类中，调用<CODE><A href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#setAccessibilityDelegate(android.view.View, android.support.v4.view.AccessibilityDelegateCompat)">ViewCompat.setAccessibilityDelegate()</A></CODE>方法来实现上面的无障碍方法。对于这种方法的示例，请参阅支持库(版本5或更高)<CODE>AccessibilityDelegateSupportActivity</CODE>例子在(<CODE>&lt;sdk&gt;/extras/android/support/v4/samples/Support4Demos/</CODE>)。</div>
  </LI></UL>
 
<P class="zhongwen">在任何一种情况下，需要为自定义视图类实现下面的无障碍方法：</P>
 
 <P class="zhongwen">更多信息实现这些方法,请参阅填充无障碍事件（<A href="apps.htm#populate-events">Populating
 Accessibility Events</A>）。</P>

<H3 id="send-events">发送无障碍事件</H3>


<P class="zhongwen">根据自定义视图的特性，不是由默认实现处理的事件，可能需要在不同时刻发送<CODE><A 
href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE>对象。<CODE><A href="http://developer.android.com/reference/android/view/View.html">View</A></CODE>类为这些事件类型提供了默认的实现方法：</P>

<UL>
  <LI>自API级别4引入：     
  <UL>
    <LI><CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_CLICKED">TYPE_VIEW_CLICKED</A></CODE></LI>
    <LI><CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_LONG_CLICKED">TYPE_VIEW_LONG_CLICKED</A></CODE></LI>
    <LI><CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_FOCUSED">TYPE_VIEW_FOCUSED</A></CODE></LI></UL></LI>
  <LI>自API级别14引入:    
  <UL>
    <LI><CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_SCROLLED">TYPE_VIEW_SCROLLED</A></CODE></LI>
    <LI><CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_HOVER_ENTER">TYPE_VIEW_HOVER_ENTER</A></CODE></LI>
    <LI><CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_HOVER_EXIT">TYPE_VIEW_HOVER_EXIT</A></CODE></LI></UL></LI></UL>

<P class="note zhongwen"><STRONG>注意：</STRONG>悬停（Hover）事件与触摸浏览相关联，触摸浏览使用这些事件作为触发器，为用户界面元素提供音频反馈。</P>


<P class="zhongwen">一般来说，每当自定义视图的内容发生变化时，应该发送一个<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE>事件。例如，如果创建了一个自定义的滑动条，用户可以按下左边或右边的箭头选择数值，当滑动条的值发生改变时，自定义视图应该发出一个<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html#TYPE_VIEW_TEXT_CHANGED">TYPE_VIEW_TEXT_CHANGED</A></CODE> 类型的事件。下面的示例代码演示了使用<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEventSource.html#sendAccessibilityEvent(int)">sendAccessibilityEvent()</A></CODE>方法报告该事件：</P>

<PRE>@Override
public boolean onKeyUp (int keyCode, KeyEvent event) {
    if (keyCode == KeyEvent.KEYCODE_DPAD_LEFT) {
        mCurrentValue--;
        sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED);
        return true;
    }
    ...
}
</PRE>

<H3 id="populate-events">填充无障碍事件</H3>

<P class="zhongwen">每个<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE>有一组必需的属性，这些属性描述当前视图的状态。这些属性包括视图类名称、内容描述和检查状态等信息。每个事件类型必须的特定属性被描述在<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE>参考文档中。<CODE><A href="http://developer.android.com/reference/android/view/View.html">View</A></CODE>实现提供这些属性的默认值。包含类名和事件时间标记在内的很多值会被自动提供。如果正在创建一个自定义视图组件，必须提供一些关于视图内容和特性的信息。这些信息可能是简单的按钮标签，但是也可能包含想要添加到事件中的额外的状态信息。</P>

<P class="zhongwen">一个自定义视图为无障碍服务提供信息的最低要求是实现<CODE><A href="http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">dispatchPopulateAccessibilityEvent()</A></CODE>方法。系统调用这个方法，为<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE>请求信息，让自定义视图兼容Android1.6(API级别4)以上的无障碍服务。下面的示例代码展示了该方法的基本实现：</P>

<PRE>@Override
public void dispatchPopulateAccessibilityEvent(AccessibilityEvent event) {
    super.dispatchPopulateAccessibilityEvent(event);
    //在API级别14及以上版本中，调用父类实现将文本填充到事件；
	//在低于API级别14的系统中，检查事件的文本内容，并为自定义视图添加合适的文本描述；
    CharSequence text = getText();
    if (!TextUtils.isEmpty(text)) {
        event.getText().add(text);
    }
}
</PRE>


<P class="zhongwen">在Android 4.0(API级别14)和更高的系统中，使用<CODE><A href="http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">onPopulateAccessibilityEvent()</A></CODE>和<CODE><A href="http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">onInitializeAccessibilityEvent()</A></CODE>方法来填充或修改<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE>事件中的信息。<CODE><A href="http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">onPopulateAccessibilityEvent()</A></CODE>方法可专门用来为事件添加或修改文本内容，这些信息会被如TalkBack的无障碍服务转化为音频反馈。使用<CODE><A href="http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)">onInitializeAccessibilityEvent()</A></CODE>方法添加事件的其他信息，比如视图的选择状态。</P>

 
 <P class="zhongwen">此外，还应该实现<CODE><A href="http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)">onInitializeAccessibilityNodeInfo()</A></CODE>方法。该方法填充<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.html">AccessibilityNodeInfo</A></CODE>对象，视图层次在接收此事件后生成无障碍事件，无障碍服务使用<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.html">AccessibilityNodeInfo</A></CODE>对象访问该视图层次，获得更多的上下文信息并为用户提供合适的反馈。</P>
 
<P class="zhongwen">下面的示例代码显示了如何使用<CODE><A href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#setAccessibilityDelegate(android.view.View, android.support.v4.view.AccessibilityDelegateCompat)">ViewCompat.setAccessibilityDelegate()</A></CODE>重写这三种方法。注意，此示例代码要求添加API级别4（或更高）的Android<A href="http://developer.android.com/tools/support-library/index.html">支持库(Support 
Library)</A>到项目。</P>


<PRE>ViewCompat.setAccessibilityDelegate(new AccessibilityDelegateCompat() {
    @Override
    public void onPopulateAccessibilityEvent(View host, AccessibilityEvent event) {
        super.onPopulateAccessibilityEvent(host, event);
	//调用父类实现来填充事件的文本。然后添加父类中不存在的文本。
	//常常只需要在自定义视图中添加这些文本。
        CharSequence text = getText();
        if (!TextUtils.isEmpty(text)) {
            event.getText().add(text);
        }
    }
    @Override
    public void onInitializeAccessibilityEvent(View host, AccessibilityEvent event) {
        super.onInitializeAccessibilityEvent(host, event);
        //调用父类实现让父类设置事件属性。然后添加父类不支持的新属性。
        event.setChecked(isChecked());
    }
    @Override
    public void onInitializeAccessibilityNodeInfo(View host,
            AccessibilityNodeInfoCompat info) {
        super.onInitializeAccessibilityNodeInfo(host, info);
		//调用父类实现让父类设置适当的info属性。然后添加父类不支持的属性（checkable and checked）。
        info.setCheckable(true);
        info.setChecked(isChecked());
       //经常只需要添加自定义视图的文本。
        CharSequence text = getText();
        if (!TextUtils.isEmpty(text)) {
            info.setText(text);
        }
    }
}
</PRE>

 <P class="zhongwen">在Android 4.0(API级别14)和更高的应用程序中，可以在自定义视图类中直接实现这些方法。这种方法的另一个例子，请参阅Android<A href="http://developer.android.com/tools/support-library/index.html">支持库(Support 
Library)</A>(版本5或更高)的示例，<CODE>AccessibilityDelegateSupportActivity</CODE> 样本在
 (<CODE>&lt;sdk&gt;/extras/android/support/v4/samples/Support4Demos/</CODE>)。</P>
 
<H3 id="virtual-hierarchy">提供自定义无障碍内容</H3>


<P class="zhongwen">在Android4.0（API级别14）中，Android框架得到改善，可以允许无障碍服务访问可生成无障碍事件的用户界面组件包含的视图层次。此改善允许无障碍服务提供一组更丰富的可以帮助用户的上下文信息。</P>

<P class="zhongwen">在某些情况下，无障碍服务不能从视图层次中获得足够的信息。一个自定义界面控件样例包含两个以上的可点击区域，例如一个日历控件。这种情况下，无障碍服务无法获得足够的信息，因为可点击部分不是视图层次的一部分。</P>

<IMG id="figure1" 
alt="" src="style/calendar.png"> 

<P class="img-caption"><STRONG>图1 </STRONG>可选择日期的自定义日历视图。</P>

<P class="zhongwen">在图1所示的例子中，整个日历是作为独立View实现，因此如果不采取其他措施，无障碍服务就不能获得有关视图和视图中用户选择的足够信息。例如，如果用户点击了包含<STRONG>17</STRONG>的日期，无障碍框架只能接收到整个日历控件的描述信息。这种情况下，TalkBack无障碍服务会简单读出“日历”，或者稍好一些的读出“四月日历”，而用户将会不知道自己选择了哪天。</P>


<P class="zhongwen">在像这样的情况下，为了给无障碍服务提供足够的上下文信息，Android框架提供了一种方法——指定虚拟视图层次。应用开发者可以使用<EM>虚拟视图层次</EM>方法为无障碍服务提供一个附加视图层次，该层次能最大限度的接近屏幕上的真实信息。这种方法允许无障碍服务给用户提供更有用的上下文信息。</P>


<P class="zhongwen">另一个需要虚拟视图继承结构的情况是，用户界面包含一组功能密切相关的控件（视图），操作一个控件会影响一个或多个组内其他元素的内容，例如增加按钮和减少按钮分开的数值选择器。在这种情况下，无障碍服务无法获得足够的信息，因为一个控件的操作会改变另一个控件的内容，且无障碍服务无法获得这种关系。为了处理这种情况，将包含视图的相关控件进行分组，从该容器中提供虚拟视图继承，清楚呈现控件提供的信息和行为。</P>


<P class="zhongwen">为了提供虚拟视图继承，在自定义视图或者视图组中重写<CODE><A href="http://developer.android.com/reference/android/view/View.html#getAccessibilityNodeProvider()">getAccessibilityNodeProvider()</A></CODE>方法，并返回<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityNodeProvider.html">AccessibilityNodeProvider</A></CODE>的实现。该无障碍特性实现的一个例子，详见ApiDemos样例工程中的<CODE>AccessibilityNodeProviderActivity</CODE>。在Android1.6和以后的版本中，可以使用<A href="http://developer.android.com/tools/support-library/index.html">Support 
Library</A>中的<CODE><A href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#getAccessibilityNodeProvider(android.view.View)">ViewCompat.getAccessibilityNodeProvider()</A></CODE>方法，并提供<CODE><A href="http://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeProviderCompat.html">AccessibilityNodeProviderCompat</A></CODE>实现，就可以兼容虚拟视图继承。</P>

<H3 id="custom-touch-events">处理自定义触摸事件</H3>

<P class="zhongwen">自定义视图控件可能需要非标准的触摸事件行为。例如自定义控件可能使用<CODE><A href="http://developer.android.com/reference/android/view/View.html#onTouchEvent(android.view.MotionEvent)">onTouchEvent(MotionEvent)</A></CODE>监听方法来检测<CODE><A href="http://developer.android.com/reference/android/view/MotionEvent.html#ACTION_DOWN">ACTION_DOWN</A></CODE>和<CODE><A href="http://developer.android.com/reference/android/view/MotionEvent.html#ACTION_UP">ACTION_UP</A></CODE>事件，并触发一个特殊的点击事件。为了保证无障碍服务的兼容性，处理自定义点击事件的代码必须如下：</P>

  <OL>
  <LI><div class="zhongwen">为解释点击操作生成适当的<CODE><A href="http://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html">AccessibilityEvent</A></CODE>；<div></LI>
  <LI><div class="zhongwen">启用无障碍服务来为不能使用触摸屏的用户执行自定义单击操作。</div></LI></OL>
 

<P class="zhongwen">要有效的处理这些需求，代码应该重写<CODE><A href="http://developer.android.com/reference/android/view/View.html#performClick()">performClick()</A></CODE>方法，需要调用该方法的父类实现，然后执行点击事件需要的任何操作。当检测到自定义点击操作时，代码应该调用<CODE>performClick()</CODE>。下列代码示例展示了这一模式：</P>


<PRE>class CustomTouchView extends View {

    public CustomTouchView(Context context) {
        super(context);
    }

    boolean mDownTouch = false;

    @Override
    public boolean onTouchEvent(MotionEvent event) {
        super.onTouchEvent(event);

        //监听向下向上触摸事件
        switch (event.getAction()) {
            case MotionEvent.ACTION_DOWN:
                mDownTouch = true;
                return true;

            case MotionEvent.ACTION_UP:
                if (mDownTouch) {
                    mDownTouch = false;
                    performClick(); //调用该方法处理响应，启动无障碍服务为那些无法点击的用户执行操作。
                    return true;
                }
        }
        return false; //为其他触摸事件返回假。
    }

    @Override
    public boolean performClick() {
        //调用父类实现，父类会生成无障碍事件，并且在视图上调用onClick()监听器，如果任何；
        super.performClick();

        //在这里处理自定义点击操作

        return true;
    }
}
</PRE>


<P class="zhongwen">上面的代码通过使用<CODE><A href="http://developer.android.com/reference/android/view/View.html#performClick()">performClick()</A></CODE>方法保证自定义点击事件与无障碍服务兼容，生成无障碍事件并且为无障碍服务提供入口，并代替用户执行自定义点击事件。</P>

<P class="note zhongwen"><STRONG>注意：</STRONG>如果自定义视图有不同的可点击区域，例如自定义日历视图，必须在自定义视图中重写<CODE><A href="http://developer.android.com/reference/android/view/View.html#getAccessibilityNodeProvider()">getAccessibilityNodeProvider()</A></CODE>实现<A href="apps.htm#virtual-hierarchy">虚拟视图继承(virtual 
view hierarchy)</A>，保证与无障碍服务兼容。</P>


<H2 id="test">测试无障碍</H2>

<P class="zhongwen">测试应用的无障碍是保证良好用户体验的重要部分。开发者可以通过在应用程序启用语音反馈和仅使用定向控制在应用程序内导航来测试最重要的无障碍特性。更多无障碍测试信息，详见<A href="http://developer.android.com/tools/testing/testing_accessibility.html">无障碍测试清单(Accessibility Testing Checklist)</A>。</P>

</DIV></DIV>


<!--正文完-->
<!-- end jd-content --> 
<DIV class="wrap">
<DIV class="dac-footer">
<DIV class="cols dac-footer-main">
<DIV class="col-1of2"><A class="dac-footer-getnews" href="javascript:;" 
data-modal-toggle="newsletter">Get news &amp; tips <SPAN class="dac-fab dac-primary"><I 
class="dac-sprite dac-mail"></I></SPAN></A>       </DIV>
<DIV class="col-1of2 dac-footer-reachout">
<DIV class="dac-footer-contact"><A class="dac-footer-contact-link" href="http://android-developers.blogspot.com/">Blog</A> 
          <A class="dac-footer-contact-link" href="http://developer.android.com/support.html">Support</A> 
        </DIV>
<DIV class="dac-footer-social"><A class="dac-fab dac-footer-social-link" href="https://www.youtube.com/user/androiddevelopers"><I 
class="dac-sprite dac-youtube"></I></A>           <A class="dac-fab dac-footer-social-link" 
href="https://plus.google.com/+AndroidDevelopers"><I class="dac-sprite dac-gplus"></I></A> 
          <A class="dac-fab dac-footer-social-link" href="https://twitter.com/AndroidDev"><I 
class="dac-sprite dac-twitter"></I></A>         </DIV></DIV></DIV>
<HR class="dac-footer-separator">

<P class="dac-footer-copyright">          Except as noted, this content is  
licensed under <A href="http://creativecommons.org/licenses/by/2.5/">  Creative 
Commons Attribution 2.5</A>. For details and  restrictions, see the <A href="http://developer.android.com/license.html">Content 
 License</A>.       </P>
<P class="dac-footer-links"><A href="http://developer.android.com/about/index.html">About 
Android</A>       <A 
href="http://developer.android.com/auto/index.html">Auto</A>       <A href="http://developer.android.com/tv/index.html">TV</A> 
      <A href="http://developer.android.com/wear/index.html">Wear</A>       <A 
href="http://developer.android.com/legal.html">Legal</A>       <SPAN class="locales" 
id="language"><SELECT name="language" onchange="changeLangPref(this.value, true)"><OPTION 
   value="en">English</OPTION>           <OPTION 
  value="es">Español</OPTION>           <OPTION value="in">Bahasa 
  Indonesia</OPTION>           <OPTION value="ja">日本語</OPTION>           <OPTION 
  value="ko">한국어</OPTION>           <OPTION value="pt-br">Português 
  Brasileiro</OPTION>           <OPTION value="ru">Русский</OPTION>           
  <OPTION value="vi">tiếng Việt</OPTION>           <OPTION 
  value="zh-cn" selected="selected">中文（简体)</OPTION>           <OPTION value="zh-tw">中文（繁體)</OPTION>  
         </SELECT>       </SPAN></P></DIV></DIV><!-- end footer --> 
<DIV class="dac-modal newsletter" data-swap="" data-newsletter="" data-modal="newsletter">
<DIV class="dac-modal-container">
<DIV class="dac-modal-window"><HEADER class="dac-modal-header"><BUTTON class="dac-modal-header-close" 
data-modal-toggle=""><I class="dac-sprite dac-close"></I></BUTTON>         
<DIV class="dac-swap" data-swap-container=""><SECTION class="dac-swap-section dac-active dac-down">
<H2 class="norule dac-modal-header-title">Get the latest Android developer news 
and tips that will help you find success on Google Play.</H2>
<P class="dac-modal-header-subtitle">* Required Fields</P></SECTION><SECTION 
class="dac-swap-section dac-up">
<H2 class="norule dac-modal-header-title">Hooray!</H2></SECTION></DIV></HEADER>
<DIV class="dac-swap" data-swap-container=""><SECTION class="dac-swap-section dac-active dac-left">
<FORM class="dac-form" action="https://docs.google.com/forms/d/1QgnkzbEJIDu9lMEea0mxqWrXUJu0oBCLD7ar23V0Yys/formResponse" 
method="post" target="dac-newsletter-iframe"><SECTION class="dac-modal-content">
<FIELDSET class="dac-form-fieldset">
<DIV class="cols">
<DIV class="col-1of2 newsletter-leftCol">
<DIV class="dac-form-input-group"><LABEL class="dac-form-floatlabel" for="newsletter-full-name">Full 
name</LABEL><INPUT name="entry.1357890476" class="dac-form-input" id="newsletter-full-name" required="" type="text"><SPAN 
class="dac-form-required">*</SPAN></DIV>
<DIV class="dac-form-input-group"><LABEL class="dac-form-floatlabel" for="newsletter-email">Email 
address</LABEL><INPUT name="entry.472100832" class="dac-form-input" id="newsletter-email" required="" type="email"><SPAN 
class="dac-form-required">*</SPAN></DIV></DIV>
<DIV class="col-1of2 newsletter-rightCol">
<DIV class="dac-form-input-group"><LABEL class="dac-form-floatlabel" for="newsletter-company">Company 
/ developer 
name</LABEL><INPUT name="entry.1664780309" class="dac-form-input" id="newsletter-company" type="text"></DIV>
<DIV class="dac-form-input-group"><LABEL class="dac-form-floatlabel" for="newsletter-play-store">One 
of your Play Store app URLs</LABEL><INPUT name="entry.47013838" class="dac-form-input" id="newsletter-play-store" required="" type="url"><SPAN 
class="dac-form-required">*</SPAN></DIV></DIV></DIV></FIELDSET>
<FIELDSET class="dac-form-fieldset">
<DIV class="cols">
<DIV class="col-1of2 newsletter-leftCol"><LEGEND class="dac-form-legend">Which 
best describes your business:<SPAN class="dac-form-required">*</SPAN>            
         </LEGEND>
<DIV class="dac-form-radio-group"><INPUT name="entry.1796324055" class="dac-form-radio" 
id="newsletter-business-type-app" required="" type="radio" value="Apps">         
              <LABEL class="dac-form-radio-button" for="newsletter-business-type-app"></LABEL> 
                      <LABEL class="dac-form-label" for="newsletter-business-type-app">Apps</LABEL> 
                    </DIV>
<DIV class="dac-form-radio-group"><INPUT name="entry.1796324055" class="dac-form-radio" 
id="newsletter-business-type-games" required="" type="radio" value="Games">      
                 <LABEL class="dac-form-radio-button" for="newsletter-business-type-games"></LABEL> 
                      <LABEL class="dac-form-label" for="newsletter-business-type-games">Games</LABEL> 
                    </DIV>
<DIV class="dac-form-radio-group"><INPUT name="entry.1796324055" class="dac-form-radio" 
id="newsletter-business-type-appsgames" required="" type="radio" value="Apps and Games"> 
                      <LABEL class="dac-form-radio-button" for="newsletter-business-type-appsgames"></LABEL> 
                      <LABEL class="dac-form-label" for="newsletter-business-type-appsgames">Apps 
&amp; Games</LABEL>                     </DIV></DIV>
<DIV class="col-1of2 newsletter-rightCol newsletter-checkboxes">
<DIV class="dac-form-radio-group">
<DIV class="dac-media">
<DIV class="dac-media-figure"><INPUT name="entry.732309842" class="dac-form-checkbox" 
id="newsletter-add" required="" type="checkbox" value="Add me to the mailing list for the monthly newsletter and occasional emails about development and Google Play opportunities."> 
                          <LABEL class="dac-form-checkbox-button" for="newsletter-add"></LABEL> 
                        </DIV>
<DIV class="dac-media-body"><LABEL class="dac-form-label dac-form-aside" for="newsletter-add">Add 
me to the mailing list for the monthly newsletter and occasional emails about 
development and Google Play opportunities.<SPAN 
class="dac-form-required">*</SPAN></LABEL>                         
</DIV></DIV></DIV>
<DIV class="dac-form-radio-group">
<DIV class="dac-media">
<DIV class="dac-media-figure"><INPUT name="entry.2045036090" class="dac-form-checkbox" 
id="newsletter-terms" required="" type="checkbox" value="I acknowledge that the information provided in this form will be subject to Google's privacy policy (https://www.google.com/policies/privacy/)."> 
                          <LABEL class="dac-form-checkbox-button" for="newsletter-terms"></LABEL> 
                        </DIV>
<DIV class="dac-media-body"><LABEL class="dac-form-label dac-form-aside" for="newsletter-terms">I 
acknowledge that the information provided in this form will be subject to <A 
href="https://www.google.com/policies/privacy/">Google's privacy 
policy</A>.<SPAN class="dac-form-required">*</SPAN></LABEL>                      
   </DIV></DIV></DIV></DIV></DIV></FIELDSET></SECTION><FOOTER class="dac-modal-footer">
<DIV class="cols">
<DIV class="col-2of5"></DIV></DIV><BUTTON class="dac-fab dac-primary dac-large dac-modal-action" 
type="submit" value="Submit"><I class="dac-sprite dac-arrow-right"></I></BUTTON> 
            </FOOTER></FORM></SECTION><SECTION class="dac-swap-section dac-right">
<DIV class="dac-modal-content">
<P class="newsletter-success-message">              You have successfully signed 
up for the latest Android developer news and tips.             
</P></DIV></SECTION></DIV></DIV></DIV></DIV><!-- end footer --> </DIV><!-- end doc-content --> 

</DIV><!-- end .cols --> 

</DIV><!-- end body-content -->   
<SCRIPT src="Making%20Applications%20Accessible%20%20Android%20Developers_files/ytblogger_lists_unified.json" type="text/javascript"></SCRIPT>
   
<SCRIPT src="Making%20Applications%20Accessible%20%20Android%20Developers_files/jd_lists_unified.js" type="text/javascript"></SCRIPT>
   
<SCRIPT src="Making%20Applications%20Accessible%20%20Android%20Developers_files/jd_extras.js" type="text/javascript"></SCRIPT>
   
<SCRIPT src="Making%20Applications%20Accessible%20%20Android%20Developers_files/jd_collections.js" type="text/javascript"></SCRIPT>
   
<SCRIPT src="Making%20Applications%20Accessible%20%20Android%20Developers_files/jd_tag_helpers.js" type="text/javascript"></SCRIPT>
 </BODY></HTML>
